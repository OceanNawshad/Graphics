#include <cstdio>
#include<GL/gl.h>
#include <GL/glut.h>
#include<iostream>

using namespace std;

double m,dy,dx,pk,pk1,xk,yk,xk1,yk1;

void myDisplay(void)
{
glClear (GL_COLOR_BUFFER_BIT);
glColor3ub (128, 128, 128);
glPointSize(5.0);
glBegin(GL_POINTS);

dy=yk1-yk;
dx=xk1-xk;
pk=2*(dy-dx);

if(pk>=0)
    {
        xk=xk+1;
        yk=yk+1;

        glVertex2i(xk, yk);

    }
else if(pk<0)
    {
        xk=xk+1;
        yk=yk;
        glVertex2i(xk, yk);
    }

 while(xk<=xk1 && yk<=yk1)
 {
    pk1=pk+2*dy-2*dx*(yk1-yk);
    if(pk1<0)
    {
        xk=xk+1;
        yk=yk;
        glVertex2i(xk,yk);

    }
    else if(pk1>=0)
    {
        xk=xk+1;
        yk=yk+1;
        glVertex2i(xk,yk);
    }
 }


glEnd();
glFlush ();
}

void myInit (void)
{
glClearColor(0.0, 0.0, 0.0, 0.0);
glPointSize(4.0);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluOrtho2D(0.0, 640.0, 0.0, 480.0);
}





int main(int argc, char** argv)
{
cout<<"input value of xk,yk,xk1,yk1"<<endl;
cin>>xk>>yk>>xk1>>yk1;


glutInit(&argc, argv);
glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
glutInitWindowSize (640, 480);
glutInitWindowPosition (100, 150);
glutCreateWindow ("");
glutDisplayFunc(myDisplay);
myInit ();
glutMainLoop();
}
